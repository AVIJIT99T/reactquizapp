{"version":3,"sources":["Components/Main2.jsx","Components/Quiz2.jsx","Components/End.jsx","App.jsx","index.js"],"names":["Main2","className","class","to","Quiz2","useState","ques","setQues","currQues","setCurrQues","setOptionChose","options","setOptions","selectedOption","setSelectedOption","history","useHistory","getQues","a","axios","get","res","console","log","data","results","useEffect","allAnswers","correct_answer","incorrect_answers","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","question","map","ans","index","type","style","backgroundColor","onClick","finalOptions","optionSelected","score","ans1","push","pathname","state","finalScore","endQuiz","End","location","useLocation","showScore","App","exact","path","component","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.9b79b17b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./Main2.css\";\r\n\r\nconst Main2 = () => {\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-md-center\">\r\n          <div className=\"col-sm-4\">\r\n            <div className=\"card pt-2 p-3 m-auto mt-5 mb-4 shadow card_main2\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Welcome to weekly</h5>\r\n                <h6 className=\"card-subtitle mb-2\">Quiz Contest</h6>\r\n\r\n                <ul className=\"main2\">\r\n                  <li className=\"card-text\">\r\n                    This section contains 10 questions.\r\n                  </li>\r\n\r\n                  <li className=\"card-text\">\r\n                    Each correct answer will carry +1 marks.\r\n                  </li>\r\n                  <li className=\"card-text\">\r\n                    There will be no negative marking for wrong answer.\r\n                  </li>\r\n                </ul>\r\n                <NavLink class=\"btn btn-primary btn_main2\" to=\"/quiz2\">\r\n                  Start Quiz\r\n                </NavLink>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main2;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Quiz2.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Quiz2 = () => {\r\n  const [ques, setQues] = useState();\r\n  const [currQues, setCurrQues] = useState(0);\r\n  const [optionChose, setOptionChose] = useState(\"\");\r\n  const [options, setOptions] = useState();\r\n  // const [score, setScore] = useState(0);\r\n  const [selectedOption, setSelectedOption] = useState([\r\n    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  ]);\r\n  let history = useHistory();\r\n\r\n  const getQues = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        \"https://opentdb.com/api.php?amount=10&category=21&difficulty=medium&type=multiple\"\r\n      );\r\n      console.log(res.data.results);\r\n      setQues(res.data.results);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getQues();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let allAnswers;\r\n\r\n    if (ques != null) {\r\n      allAnswers = [\r\n        ques[currQues].correct_answer,\r\n        ...ques[currQues].incorrect_answers,\r\n      ];\r\n      setOptions(shuffle(allAnswers));\r\n    }\r\n  }, [currQues, ques]);\r\n\r\n  const shuffle = (array) => {\r\n    let currentIndex = array.length,\r\n      temporaryValue,\r\n      randomIndex;\r\n    while (0 !== currentIndex) {\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n    return array;\r\n  };\r\n\r\n  const prevQuestion = () => {\r\n    setCurrQues(currQues - 1);\r\n  };\r\n\r\n  const nextQuestion = () => {\r\n    // if (ques[currQues].correct_answer == optionChose) {\r\n    //   // let finalOptions = [...selectedOption]\r\n    //   // finalOptions[currQues] = optionChose\r\n    //   // setSelectedOption(finalOptions)\r\n    //   // setScore(score + 1);\r\n    // }\r\n    // console.log(\"Next\", score);\r\n    setCurrQues(currQues + 1);\r\n    setOptionChose(\"\");\r\n  };\r\n\r\n  const optionSelected = (ans) => {\r\n    let finalOptions = [...selectedOption];\r\n    finalOptions[currQues] = ans;\r\n    setSelectedOption(finalOptions);\r\n  };\r\n\r\n  const endQuiz = () => {\r\n    // if(selectedOption[currQues] == optionChose){\r\n    //   setScore(score + 1);\r\n    // }\r\n    // history.push({ pathname: \"/end2\", state: { finalScore: score + 1 } });\r\n    // console.log(selectedOption);\r\n    let score = 0;\r\n    {\r\n      selectedOption.map((ans1, index) => {\r\n        console.log(selectedOption[index], ques[index].correct_answer);\r\n        if (selectedOption[index] == ques[index].correct_answer) {\r\n          score++;\r\n          console.log(\"Next\", score);\r\n        }\r\n      });\r\n    }\r\n    history.push({ pathname: \"/end2\", state: { finalScore: score } });\r\n    // if (ques[currQues].correct_answer == optionChose) {\r\n    //   setScore(score + 1);\r\n    //   console.log(\"If\", score);\r\n    //   history.push({ pathname: \"/end2\", state: { finalScore: score + 1 } });\r\n    // } else {\r\n    //   console.log(\"Else\", score);\r\n    //   history.push({ pathname: \"/end2\", state: { finalScore: score } });\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {ques != null && (\r\n        <>\r\n          <div className=\"container\">\r\n            <div className=\"row justify-content-md-center\">\r\n              <div className=\"col-sm-4\">\r\n                <div className=\"card pt-2 p-3 m-auto mt-5 mb-4 shadow card_quiz2\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Question : {currQues + 1} </h5>\r\n                    <h6 className=\"card-subtitle mb-3\">\r\n                      {ques[currQues].question}\r\n                    </h6>\r\n\r\n                    {options != null &&\r\n                      options.map((ans, index) => {\r\n                        return (\r\n                          <>\r\n                            <ul className=\"ul_quiz2\">\r\n                              <li className=\"card-text\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-light btn_quiz2\"\r\n                                  style={{\r\n                                    backgroundColor:\r\n                                      selectedOption[currQues] == ans\r\n                                        ? \"lightblue\"\r\n                                        : \"white\",\r\n                                  }}\r\n                                  onClick={() => {\r\n                                    setOptionChose(ans);\r\n                                    optionSelected(ans);\r\n                                  }}\r\n                                >\r\n                                  {ans}\r\n                                </button>\r\n                              </li>\r\n                            </ul>\r\n                          </>\r\n                        );\r\n                      })}\r\n\r\n                    {/* <ul className=\"ul_quiz\">\r\n                      <li className=\"card-text\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn mt-1 mb-1 btn-light btn_quiz\"\r\n                          onClick={() => {\r\n                            setOptionChose([ques[currQues].correct_answer]);\r\n                          }}\r\n                        >\r\n                          {ques[currQues].correct_answer}\r\n                        </button>\r\n                      </li>\r\n                      <li className=\"card-text\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn mt-1 mb-1 btn-light btn_quiz\"\r\n                          onClick={() =>\r\n                            setOptionChose([\r\n                              ques[currQues].incorrect_answers[0],\r\n                            ])\r\n                          }\r\n                        >\r\n                          {ques[currQues].incorrect_answers[0]}\r\n                        </button>\r\n                      </li>\r\n                      <li className=\"card-text\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn mt-1 mb-1 btn-light btn_quiz\"\r\n                          onClick={() =>\r\n                            setOptionChose([\r\n                              ques[currQues].incorrect_answers[1],\r\n                            ])\r\n                          }\r\n                        >\r\n                          {ques[currQues].incorrect_answers[1]}\r\n                        </button>\r\n                      </li>\r\n                      <li className=\"card-text\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn mt-1 mb-1 btn-light btn_quiz\"\r\n                          onClick={() =>\r\n                            setOptionChose([\r\n                              ques[currQues].incorrect_answers[2],\r\n                            ])\r\n                          }\r\n                        >\r\n                          {ques[currQues].incorrect_answers[2]}\r\n                        </button>\r\n                      </li>\r\n                    </ul> */}\r\n                    {currQues > 0 && (\r\n                      <a\r\n                        className=\"btn btn-primary btn_left\"\r\n                        onClick={prevQuestion}\r\n                      >\r\n                        Prev\r\n                      </a>\r\n                    )}\r\n\r\n                    {currQues != ques.length - 1 ? (\r\n                      <>\r\n                        <a\r\n                          className=\"btn btn-primary btn_right\"\r\n                          onClick={nextQuestion}\r\n                        >\r\n                          Next\r\n                        </a>\r\n                      </>\r\n                    ) : (\r\n                      <a\r\n                        className=\"btn btn-primary btn_right\"\r\n                        onClick={() => {\r\n                          endQuiz();\r\n                        }}\r\n                      >\r\n                        Submit\r\n                      </a>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Quiz2;\r\n","import React from \"react\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\n\r\nconst End = () => {\r\n  let location = useLocation();\r\n  console.log(\"Avijit\", location.state.finalScore);\r\n  // console.log(\"Avi\", location.state.finalScore);\r\n  let showScore = location.state.finalScore;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-md-center\">\r\n          <div className=\"col-sm-4\">\r\n            <div className=\"card pt-2 p-3 m-auto mt-5 mb-4 shadow card_end\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Congratulations!!!</h5>\r\n                <h6 className=\"card-subtitle mb-2\">\r\n                  You have scored {showScore} / 10 marks.\r\n                </h6>\r\n\r\n                <NavLink className=\"btn btn-primary btn_end\" to=\"/\">\r\n                  Play Again\r\n                </NavLink>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default End;\r\n","import React, { useState } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport MainPage from \"./MainPage\";\nimport Quiz from \"./Quiz\";\nimport EndQuiz from \"./EndQuiz\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Main2 from \"./Components/Main2\";\nimport Quiz2 from \"./Components/Quiz2\";\nimport End from \"./Components/End\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [score, setScore] = useState(0);\n\n  return (\n    <>\n      <div className=\"app\">\n        <Switch>\n          {/* <Route exact path=\"/\" component={MainPage} />\n          <Route path=\"/quiz\" component={Quiz} />\n          <Route path=\"/end\" component={EndQuiz} /> */}\n          <Route exact path=\"/\" component={Main2} />\n          <Route path=\"/quiz2\" component={Quiz2} />\n          <Route path=\"/end2\" component={End} />\n        </Switch>\n      </div>\n\n      {/* <MainPage /> */}\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}